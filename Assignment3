1. Why are functions advantageous to have in your programs?
Ans: Functions helps in reusablity of code that you need now write the same piece of code that does the same functionality. 

2. When does the code in a function run: when it&#39;s specified or when it&#39;s called?
Ans:  The code in fuction runs when it is called. We can call the function like this functionName().

3. What statement creates a function?
Ans: def functionName(): We can also add arguments if required.

4. What is the difference between a function and a function call?
Ans: Function includes declaration and definition of function and function call is when the code inside the particular function runs.

5. How many global scopes are there in a Python program? How many local scopes?
Ans: Whenever a function is called, a function scope is created. It includes variables and objects defined within the function. The function scope is local to the function and is destroyed once the function execution completes.
Local scopes are created within functions or other nested blocks, such as loops or conditional statements. Each time a function or block is executed, a new local scope is created, and any variables defined within that scope are accessible only within that scope.

6. What happens to variables in a local scope when the function call returns?
Ans: When a function call returns in Python, the local scope associated with that function is destroyed, and the variables within that scope cease to exist. This process is known as variable cleanup or deallocation.

7. What is the concept of a return value? Is it possible to have a return value in an expression?
Ans: Function can return a value of any data type like int, bool or even void. This value can be assigned to a function call which is assigned to variable. And yes, expression can also have a return value.

8. If a function does not have a return statement, what is the return value of a call to that function?
Ans: None.
9. How do you make a function variable refer to the global variable?
Ans: Using the keyword 'global'.

10. What is the data type of None?
Ans: NoneType

11. What does the sentence import areallyourpetsnamederic do?
Ans: This sentence imports the module called areallyourpetsnamederic to your code.

12. If you had a bacon() feature in a spam module, what would you call it after importing spam?
Ans: spam.bacon()

13. What can you do to save a programme from crashing if it encounters an error?
Ans: You can use try-exception concept to avoid crashing if it encounters an error.

14. What is the purpose of the try clause? What is the purpose of the except clause?
Ans: Try clause means the actual trying (i.e.,) it tries to excecute the code inside the try block and if any error occurs there, the code inside except block gets excecuted. There can exists multiple except blocks with corresponding errors.
We can even specify the type of error in exception like, which exception block needs to get called when a particular error is thrown by try block.
